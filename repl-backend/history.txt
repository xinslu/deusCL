#V2
(+ 1 2 3 (* 1 2 2) (/ 2 1 2) (- 3 2))
(+ 1 2 3 (* 1 2 2) (/ 2 1 2) (- 1 2))
(and 1 2)
(and nil 1 0)
(and 1 1 0)
(or 1 2)
(or 1 2 nil)
(or nil nil nil)
(and nil nil nil)
(and nil nil 1)
(or nil nil 1)
(or nil nil nil)
(or nil nil 1)
(and 1 2 (and 1 2))
(and 1 2 (and 1 nil))
(and 1 2 (and 1 1))
(and 1 2 (or 1 1))
(and 1 2 (or nil nil))
(or 1 2 (or nil nil))
(or 1 2 nil)
(or 1 2 (or nil nil))
(and 1 2 (or nil nil))
(or 1 2 (and nil 1))
(not 1)
(not nil)
(not (and 1 2)
(not (and 1 nil))
(+ 1 2 (- 2 3) (- 1 2))
(and nil 1 2)
(and 1 2 3)
(and 1 2 0)
(and 1 2 (and nil 1 2))
(and 1 2 (and 1 1 2))
(= 1 2)
(= 1 1)
(> 1 2 3)
(< 1 2 3)
(> 1 2 3)
(> 3 2 1)
(< 3 2 1)
(< 1 2 3)
(< 1 2 1)
(not 0)
(not 1)
(not 2)
(+ 1 2)
(+ 1 2 4)
(- 1 2 4)
(min 1 2)
(max 1 2)
(max 1 2 332 1)
(% 2 1)
(% 2 5)
(% 5 2)
(let ((x 1)))
(+ 1 2)
(+ 1 2 (+ 1 2))
(let ((x 1) (y 2)))
(let ((x 1) (y 2)) (+ x 1))
(let ((x 1) (y 2)) (+ x 1) (+ y 1))
(let ((x 1) (y 2)) (+ x 1) (* y 3))
(let ((x 1) (y 2)) (+ x 1) (* x y))
(let ((x 1) (y 2)) (+ x 1) (+ x y))
(+ 1 2 3 (* 1 2 2) (/ 2 1 2) (- 2 2))
(set x 1)
 (let ((x 1) (y 2)) (set x 1) (+ x 1) (+ x y))
 (let ((x 1) (y 2)) (set x 10) (+ x 1) (+ x y))
(let ((x 1) (y 2)) (set x (+ y 1)) (+ x 1) (+ x y))
 (let ((x 1) (y 2)) (set x 10) (+ x 1) (+ x y))
(let ((x 1) (y 2)) (set x (+ y 1)) (+ x 1) (+ x y))
(print (+ 1 2))
(let ((x 1) (y 2)) (set x (+ y 1)) (+ x 1) (+ x y))
(set x 1)
(let ((x 1) (y 2)) (set x (+ y 1)) (+ x 1) (+ x y))
(let ((x 1) (y 2)) (set x (+ x 1)) (+ x 1) (+ x y))
(+ 1 2 3 (* 1 2 2) (/ 2 1 2) (- 2 2))
(> 1 2 3)
(let ((x 1) (y 2)) (set x (+ x 1)) (set x (* x x)) (+ x 1) (+ x y))
(let ((x 1) (y 2)) (set x (+ x 1)) (set x (* x x)) (+ x 1) (+ x y) (print x))
(let ((x 1) (y 2)) (print x))
(let ((x 1) (y 2)) (set x (+ x 1)) (set x (* x x)) (+ x 1) (+ x y) (print x))
(let ((x 1) (y 2)) (if (print x)))
(let ((x 1) (y 2)) (if (< x 1) (print x)))
(let ((x 1) (y 2)) (if (<= x 1) (print x)))
(print "bruh")
(let ((x 1) (y 2)) (if (<= x 1) (print x) (print (+ x 1))) (+ x 1))
(let ((x 1) (y 2)) (if (< x 1) (print x) (print (+ x 1))) (+ x 1))
(let ((x 1) (y 2)) (if (< x 1) (print x) (print (+ x 1))) (set x (+ x 1)))
(+ 1 2 3 (* 1 2 2) (/ 2 1 2) (- 2 2))
(let ((x 1) (y 2)) (set x (+ x 1)) (if (< x 1) (print x) (print (+ x 1))))
(let ((x 1) (y 2)) (if (< x 1) (print x) (print (+ x 1))) (set x (+ x 1)))
(let ((x 1) (y 2)) (print x))
(let ((x 1) (y 2)) (print x) (print y))
(let ((x 1) (y 2)) (set x (+ x 1)) (if (< x 1) (print x) (print (+ x 1))))
(let ((x 1) (y 2)) (print x) (print y))
(loop (i 0 1) (print i))
(loop (i 0 10) (print i))
(loop (i 0 10) (if (= (% i 2) 0) (print i)))
(loop (i 0 10) (print i))
(print "bruh")
